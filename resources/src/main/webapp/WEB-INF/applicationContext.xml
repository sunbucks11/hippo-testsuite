<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2008-2013 Hippo B.V. (http://www.onehippo.com)

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <!--
  In this example, it is assumed that the render path property (hst:renderpath) is set to 
  'spring/contactspring.do' in the HST configurations in the repository.
  
  SimpleUrlHandlerMapping and InternalResourceViewResolver is configured to allow simple JSP page based views,
  and UrlFilenameViewController is configured to have simple view controller without a controller java class 
  just for simplicity.
  
  Also, you can set the render path property (hst:renderpath) to '/WEB-INF/jsp/spring/contactspring.jsp' directly.
  In that case, the dispatching to render path is directly done without passing through the spring framework's DispatcherServlet.
  -->

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>org/hippoecm/hst/demo/spring/webmvc/exceptions</value>
      </list>
    </property>
  </bean>

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="prefix" value="/WEB-INF/jsp/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

  <bean
    class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="mappings">
      <value>
        /spring/contactspring.do = contactViewController
        /spring/contactspringmvc.do = contactFormController
      </value>
    </property>
  </bean>

  <bean id="contactViewController"
    class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />

  <!-- HST Component Beans -->
  <bean id="contactBean" class="org.hippoecm.hst.demo.spring.ContactSpring">
    <property name="mailSender" ref="mailSender" />
    <property name="templateMessage" ref="templateMessage" />
  </bean>
  
  <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
    <property name="to" value="contact@mycompany.com" />
    <property name="subject" value="My opinion" />
  </bean>
  
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="mail.mycompany.com"/>
  </bean>

  <!-- Spring Web MVC Integration Example -->
  <bean id="contactFormController" class="org.hippoecm.hst.demo.spring.webmvc.ContactFormController">
    <property name="mailSender" ref="mailSender" />
    <property name="templateMessage" ref="templateMessage" />
    <property name="formView" value="spring/contactspringmvc-form"/>
    <property name="successView" value="spring/contactspringmvc-success"/>
    <property name="commandName" value="contactMessage"/>
    <property name="commandClass" value="org.hippoecm.hst.demo.spring.webmvc.ContactMessageBean"/>
    <property name="validateOnBinding" value="true"/>
    <property name="validators">
      <list>
        <bean class="org.hippoecm.hst.demo.spring.webmvc.ContactMessageValidator">
        </bean>
      </list>
    </property>
  </bean>

</beans>